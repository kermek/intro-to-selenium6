package com.softserveinc.training;

// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Keys;
import java.util.HashMap;
import java.util.Map;

public class RozetkaIDE {
    private WebDriver driver;
    private Map<String, Object> vars;
    JavascriptExecutor js;
    @Before
    public void setUp() {
        driver = new FirefoxDriver();
        js = (JavascriptExecutor) driver;
        vars = new HashMap<String, Object>();
    }
    @After
    public void tearDown() {
        driver.quit();
    }
    @Test
    public void robotxiaomi() {
        // Test name: robot_xiaomi
        // Step # | name | target | value | comment
        // 1 | open | / |  |
        driver.get("https://rozetka.com.ua/");
        // 2 | setWindowSize | 1259x724 |  |
        driver.manage().window().setSize(new Dimension(1259, 724));
        // 3 | executeScript | return "user" + new Date().getTime(); | userName |
        vars.put("userName", js.executeScript("return 'user' + new Date().getTime();"));
        // 4 | click | linkText=войдите в личный кабинет |  |
        driver.findElement(By.linkText("войдите в личный кабинет")).click();
        // 5 | click | linkText=Зарегистрироваться |  |
        driver.findElement(By.linkText("Зарегистрироваться")).click();
        // 6 | type | name=title | ${userName} |
        driver.findElement(By.name("title")).sendKeys(vars.get("userName").toString());
        // 7 | type | name=login | ${userName}@gmail.com |
        driver.findElement(By.name("login")).sendKeys(vars.get("userName").toString() + "@gmail.com");
        // 8 | type | name=password | P@ssw0rd |
        driver.findElement(By.name("password")).sendKeys("P@ssw0rd");
        // 9 | click | css=.btn-link-sign > .btn-link-i |  |
        driver.findElement(By.cssSelector(".btn-link-sign > .btn-link-i")).click();
        // 10 | waitForElementVisible | linkText=${userName} | 30000 |
        {
            WebDriverWait wait = new WebDriverWait(driver, 30);
            wait.until(ExpectedConditions.visibilityOfElementLocated(By.linkText(vars.get("userName").toString())));
        }
        // 11 | click | name=text |  |
        driver.findElement(By.name("text")).click();
        // 12 | type | name=text | робот пылесос xiaomi |
        driver.findElement(By.name("text")).sendKeys("робот пылесос xiaomi");
        // 13 | sendKeys | name=text | ${KEY_ENTER} |
        driver.findElement(By.name("text")).sendKeys(Keys.ENTER);
        {
            WebDriverWait wait = new WebDriverWait(driver, 30);
            wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(".g-i-tile:nth-child(2) .g-i-tile-i-title")));
        }
        // 14 | assertText | css=.g-i-tile:nth-child(2) .g-i-tile-i-title | Робот-пылесос Xiaomi RoboRock Sweep One Vacuum Cleaner s50 White (S502-00) (Международная версия) |
        assertThat(driver.findElement(By.cssSelector(".g-i-tile:nth-child(2) .g-i-tile-i-title")).getText(), is("Робот-пылесос Xiaomi RoboRock Sweep One Vacuum Cleaner s50 White (S502-00) (Международная версия)"));
        // 15 | assertText | css=#goods_price_block_45433456 .g-price-old-uah span | 13 799 |
        assertThat(driver.findElement(By.cssSelector("#goods_price_block_45433456 .g-price-old-uah span")).getText(), is("13 799"));
        // 16 | mouseOver | linkText=${userName} |  |
        {
            WebElement element = driver.findElement(By.linkText(vars.get("userName").toString()));
            Actions builder = new Actions(driver);
            builder.moveToElement(element).perform();
        }
        {
            WebDriverWait wait = new WebDriverWait(driver, 30);
            wait.until(ExpectedConditions.visibilityOfElementLocated(By.linkText("Выход")));
        }
        // 17 | click | linkText=Выход |  |
        driver.findElement(By.linkText("Выход")).click();
    }
}

